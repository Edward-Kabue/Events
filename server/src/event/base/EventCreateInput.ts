/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/docs/how-to/custom-code

------------------------------------------------------------------------------
  */
import { InputType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import {
  IsString,
  IsOptional,
  ValidateNested,
  IsNumber,
} from "class-validator";
import { EventOrganizerWhereUniqueInput } from "../../eventOrganizer/base/EventOrganizerWhereUniqueInput";
import { Type } from "class-transformer";
import { SponsorCreateNestedManyWithoutEventsInput } from "./SponsorCreateNestedManyWithoutEventsInput";
import { TicketCreateNestedManyWithoutEventsInput } from "./TicketCreateNestedManyWithoutEventsInput";
@InputType()
class EventCreateInput {
  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  description?: string | null;

  @ApiProperty({
    required: false,
    type: () => EventOrganizerWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => EventOrganizerWhereUniqueInput)
  @IsOptional()
  @Field(() => EventOrganizerWhereUniqueInput, {
    nullable: true,
  })
  eventOrganizer?: EventOrganizerWhereUniqueInput | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  images?: string | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  name?: string | null;

  @ApiProperty({
    required: false,
    type: Number,
  })
  @IsNumber()
  @IsOptional()
  @Field(() => Number, {
    nullable: true,
  })
  price?: number | null;

  @ApiProperty({
    required: false,
    type: () => SponsorCreateNestedManyWithoutEventsInput,
  })
  @ValidateNested()
  @Type(() => SponsorCreateNestedManyWithoutEventsInput)
  @IsOptional()
  @Field(() => SponsorCreateNestedManyWithoutEventsInput, {
    nullable: true,
  })
  tagd?: SponsorCreateNestedManyWithoutEventsInput;

  @ApiProperty({
    required: false,
    type: () => TicketCreateNestedManyWithoutEventsInput,
  })
  @ValidateNested()
  @Type(() => TicketCreateNestedManyWithoutEventsInput)
  @IsOptional()
  @Field(() => TicketCreateNestedManyWithoutEventsInput, {
    nullable: true,
  })
  tickets?: TicketCreateNestedManyWithoutEventsInput;
}
export { EventCreateInput };

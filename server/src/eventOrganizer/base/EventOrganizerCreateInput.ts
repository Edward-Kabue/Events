/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/docs/how-to/custom-code

------------------------------------------------------------------------------
  */
import { InputType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import {
  IsNumber,
  IsOptional,
  ValidateNested,
  IsString,
  IsInt,
} from "class-validator";
import { EventCreateNestedManyWithoutEventOrganizersInput } from "./EventCreateNestedManyWithoutEventOrganizersInput";
import { Type } from "class-transformer";
import { TicketCreateNestedManyWithoutEventOrganizersInput } from "./TicketCreateNestedManyWithoutEventOrganizersInput";
@InputType()
class EventOrganizerCreateInput {
  @ApiProperty({
    required: false,
    type: Number,
  })
  @IsNumber()
  @IsOptional()
  @Field(() => Number, {
    nullable: true,
  })
  bankAccount?: number | null;

  @ApiProperty({
    required: false,
    type: () => EventCreateNestedManyWithoutEventOrganizersInput,
  })
  @ValidateNested()
  @Type(() => EventCreateNestedManyWithoutEventOrganizersInput)
  @IsOptional()
  @Field(() => EventCreateNestedManyWithoutEventOrganizersInput, {
    nullable: true,
  })
  events?: EventCreateNestedManyWithoutEventOrganizersInput;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  firstname?: string | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  lastname?: string | null;

  @ApiProperty({
    required: false,
    type: Number,
  })
  @IsInt()
  @IsOptional()
  @Field(() => Number, {
    nullable: true,
  })
  phoneNumber?: number | null;

  @ApiProperty({
    required: false,
    type: () => TicketCreateNestedManyWithoutEventOrganizersInput,
  })
  @ValidateNested()
  @Type(() => TicketCreateNestedManyWithoutEventOrganizersInput)
  @IsOptional()
  @Field(() => TicketCreateNestedManyWithoutEventOrganizersInput, {
    nullable: true,
  })
  tickets?: TicketCreateNestedManyWithoutEventOrganizersInput;
}
export { EventOrganizerCreateInput };
